d(n)=O(f(n))과 𝑓(𝑛)=𝑂(𝑔(𝑛))f(n)=O(g(n)) 입니다. 이를 통해 𝑑(𝑛)=𝑂(𝑔(𝑛))d(n)=O(g(n))임을 보여야 합니다.
1. 정의에 따라
d(n) = O(f(n)) 이면 상수 c1 과 어떤 n0에 대해 모든 n>=n0 에 대해서 |d(n)|<=c1 * |f(n)| 이 성립
f(n) = O(g(n)) 이면 상수 c2 과 어떤 n0에 대해 모든 n>=n0 에 대해서 |d(n)|<=c2 * |f(n)| 이 성립
2. 합성
|d(n)|<=c1 * |f(n)|이고 |d(n)|<=c2 * |f(n)| 이므로 |d(n)|<=c1 * c2 * |g(n)| 이 된다
이는 d(n)이 g(n) 에 대해 O(g(n)) 임을 나타낸다. 여기서 c=c1 *c2 이거 n>=max(n0, n1)일 떄 성립
추가) 함수 d(n) 이 O(f(n)) 라고 말하면 그 말은 n이 충분히 클 떄 d(n)의 절대값이 f(n) 의 절대값을 넘지 않는다는 의미
여기서 충분히 크다는 것을 구체적으로 표현하면 어떤 특정한 n0 이상의 모든 n에 대해 이 관계가 성립한다는 의미
|d(n)|<=c1 * |f(n)| for all n >= n0
|f(n)|<=c2 * |g(n)| for all n >= n1
두 조건을 동시에 만족하려면 n이 n0과 n1 둘 다 이상이어야 함

